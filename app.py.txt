import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext
from bs4 import BeautifulSoup
import requests
import os

# Логирование
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# Токен вашего бота
TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')

# URL канала
CHANNEL_URL = "https://t.me/s/t_form_ua"

# Парсинг данных с канала
def parse_channel():
    response = requests.get(CHANNEL_URL)
    soup = BeautifulSoup(response.content, 'html.parser')
    items = []

    for message in soup.find_all('div', class_='tgme_widget_message_text'):
        text = message.get_text()
        item = {
            "name": text.split("\n")[0],
            "description": "\n".join(text.split("\n")[1:]),
        }
        items.append(item)
    
    return items

# Обработчик команды /start
def start(update: Update, context: CallbackContext) -> None:
    keyboard = [
        [InlineKeyboardButton("Сезоны", callback_data='seasons')],
        [InlineKeyboardButton("Расцветки", callback_data='colors')],
        [InlineKeyboardButton("Гендер", callback_data='gender')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text('Выберите категорию:', reply_markup=reply_markup)

# Обработчик нажатий кнопок
def button(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    query.answer()
    
    if query.data == 'seasons':
        query.edit_message_text(text="Выберите сезон: \n1. Лето \n2. Осень \n3. Зима \n4. Весна")
    elif query.data == 'colors':
        query.edit_message_text(text="Выберите расцветку: \n1. Красный \n2. Синий \n3. Зеленый \n4. Черный")
    elif query.data == 'gender':
        query.edit_message_text(text="Выберите гендер: \n1. Мужской \n2. Женский \n3. Унисекс")

def main():
    updater = Updater(TOKEN)
    dispatcher = updater.dispatcher

    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CallbackQueryHandler(button))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()